name: Deploy to Master
on:
    workflow_dispatch:
    push:
        branches:
            - master

jobs:
    test:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: user
                    POSTGRES_PASSWORD: secret
                    POSTGRES_DB: clm-testing
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - uses: actions/cache@v2
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Cache composer
              id: composer-cache
              run: |
                  cd api
                  echo "::set-output name=dir::$(composer config cache-files-dir)"
                  cd ..
            - uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Run api tests
              env:
                  PUSHER_APP_ID: ${{ secrets.PUSHER_APP_ID }}
                  PUSHER_APP_KEY: ${{ secrets.PUSHER_APP_KEY }}
                  PUSHER_APP_SECRET: ${{ secrets.PUSHER_APP_SECRET }}
                  PUSHER_APP_CLUSTER: ${{ secrets.PUSHER_APP_CLUSTER }}
                  MAIL_FROM_ADDRESS: ${{ secrets.MAIL_FROM_ADDRESS }}
                  XDEBUG_MODE: coverage
              run: |
                  cd api
                  composer install
                  cp .env.testing.example .env.testing
                  echo "yes" | php artisan jwt:secret --env=testing
                  ./vendor/bin/phpunit --coverage-clover coverage.xml -c phpunit.github.xml

            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v3
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    build:
        runs-on: ubuntu-latest
        needs: [test]
        steps:
            - name: Deploy
              uses: appleboy/ssh-action@v0.1.10
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  password: ${{ secrets.PASSWORD }}
                  port: ${{ secrets.PORT }}
                  script: |
                      cd clm-tools.online
                      git pull origin master
